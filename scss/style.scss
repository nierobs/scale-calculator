@use "sass:string";
@use "variables" as v;
@use 'reset';

@font-face {
    font-display: swap;
    font-family: "Open Sans";
    font-stretch: 75% 100%;
    font-style: normal;
    font-weight: 300 800;
    src: local(Open Sans), url(../fonts/OpenSans-VariableFont_wdth,wght.ttf) format(truetype) tech(variations);
}

@keyframes fade-in {
    from { opacity: 0 }
    to { opacity: 1 }
}

html {
    font-size: 18px;
    height: 100%;
}

body {
    animation: fade-in 0.99s ease-out forwards 0.33s;
    background-color: v.$background-primary;
    color: v.$color-text-primary;
    font: 400 1rem string.unquote("/") v.$line-height-primary v.$font-family-primary;
    min-height: 100%;
    opacity: 0;
    text-rendering: optimizeLegibility;
}

header,
footer {
    padding: 1rem 0;
}

section {
    padding-top: 1rem;
}

.alert {
    background-color: v.$color-stop;
    color: #fff;
    font-weight: v.$font-weight-bold;
    padding: 0.25rem 1rem;

    p {
        margin-bottom: 0;
    }
}

.container {
    margin: 0 auto;
    max-width: 1440px;
    padding: 0 1rem;
}

.card {
    background-color: v.$background-secondary;
    border-radius: v.$border-radius;
    box-shadow: v.$box-shadow;
    padding: 1rem;
}

h1, .h1 {
    font-size: v.$font-size-h1;
    font-weight: v.$font-weight-bold;
    line-height: v.$line-height-secondary;
    margin-bottom: 1rem;
}

h2, .h2 {
    font-size: v.$font-size-h2;
    font-weight: v.$font-weight-bold;
    line-height: v.$line-height-secondary;
    margin-bottom: 1rem;
}

p {
    margin-bottom: 1rem;
}

a {
    color: v.$color-link-primary;
    text-decoration: none;
    transition: color v.$transition;
}

a:hover {
    color: v.$color-link-primary-hover;
}

label,
.small {
    font-size: v.$font-size-small;
}

.uppercase {
    text-transform: uppercase;
}

.center {
    text-align: center;
}

/* Custom styles */

.flex {
    display: flex;
    gap: 1rem;
    flex-direction: column;
    margin-bottom: 1rem;
}

.flex-item {
    flex: 1;
}

.primary {
    font-weight: v.$font-weight-bold;
}

.secondary {
    color: v.$color-text-secondary;
    font-size: v.$font-size-small;
    font-weight: v.$font-weight-medium;
}

#result {
    border: v.$border;
    border-radius: v.$border-radius;
    padding: 1rem;
}

input {
    display: block;
    width: 100%;
}

input[type=range] {
    margin: 1rem 0;
}

input[type=number],
button {
    border: v.$border;
    margin: 0.5rem 0 1rem;
    outline: 0;
    padding: 0.5rem 1rem;
}

#fundamental-size {
    border-radius: 0.25rem;
}

#ratio {
    border-radius: 0.25rem 0 0 0.25rem;
}

.input-with-button {
    display: flex;

    button {
        background-color: v.$border-color;
        border-radius: 0 0.25rem 0.25rem 0;
        font-weight: v.$font-weight-medium;
        cursor: pointer;
        transition: opacity v.$transition;

        &:hover {
            opacity: .875;
        }
    }
}

@media only screen and (min-width: 769px) {
    .flex {
        flex-direction: row-reverse;
    }
}
